{
  "hash": "a911a626282731f955e010cbf2248413",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"A Quick Introduction to using R for Data Analysis\"\nauthor:\n  - name: \"Longhai Li\"\n    affiliation: \"University of Saskatchewan\"\n    url: \"https://longhaisk.github.io/\"\ndate: today\nformat: \n  html: \n    code-fold: show\neditor: source\neditor_options:\n  chunk_output_type: console\n---\n\n\n\n\n## Basic R Objects and Operations\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n## create a vector\nx <- 1:10\nx <- seq (30,3, by = -2)\na <- c(66.32, 69.87, 70.12, 90.37, 50.08, 61.20, 65.00, 57.65)\nd <- a [1]\na [1] <- 85.34\n\nmean (a)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 68.70375\n```\n\n\n:::\n\n```{.r .cell-code}\nma <- mean (a)\n## read a vector of numbers from a file\nx <- scan(\"numbers.txt\")\nx2 <- scan(\"number2.txt\")\n\n## one can also read number withoug saving to a file\ny <- scan(text = \"7  8  9 10 11 12 13 13 14 17 17 45\")\n\n## create a matrix\nA <- matrix (0, 4, 2)\n\nA <- matrix (1:8, 4,2)\n\nA\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n     [,1] [,2]\n[1,]    1    5\n[2,]    2    6\n[3,]    3    7\n[4,]    4    8\n```\n\n\n:::\n\n```{.r .cell-code}\nD <- matrix (a, 4, 2, byrow=T)\n\nD <- matrix(1:8, 2, 4)\nD\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n     [,1] [,2] [,3] [,4]\n[1,]    1    3    5    7\n[2,]    2    4    6    8\n```\n\n\n:::\n\n```{.r .cell-code}\n## create another matrix with all entry 0\nB <- matrix (1:5000, 100, 50)\n\n## assign a number to B\nB[2,4] <- 45\nB[1,]\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n [1]    1  101  201  301  401  501  601  701  801  901 1001 1101 1201 1301 1401\n[16] 1501 1601 1701 1801 1901 2001 2101 2201 2301 2401 2501 2601 2701 2801 2901\n[31] 3001 3101 3201 3301 3401 3501 3601 3701 3801 3901 4001 4101 4201 4301 4401\n[46] 4501 4601 4701 4801 4901\n```\n\n\n:::\n\n```{.r .cell-code}\nB[,1]\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n  [1]   1   2   3   4   5   6   7   8   9  10  11  12  13  14  15  16  17  18\n [19]  19  20  21  22  23  24  25  26  27  28  29  30  31  32  33  34  35  36\n [37]  37  38  39  40  41  42  43  44  45  46  47  48  49  50  51  52  53  54\n [55]  55  56  57  58  59  60  61  62  63  64  65  66  67  68  69  70  71  72\n [73]  73  74  75  76  77  78  79  80  81  82  83  84  85  86  87  88  89  90\n [91]  91  92  93  94  95  96  97  98  99 100\n```\n\n\n:::\n\n```{.r .cell-code}\nB[1,] <- 1:50\n\n\n## create a list\nE <- list (newa = a, newA = A)\n## list the names of components\nnames (E)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"newa\" \"newA\"\n```\n\n\n:::\n\n```{.r .cell-code}\n## to look at the component of E\nE$newA \n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n     [,1] [,2]\n[1,]    1    5\n[2,]    2    6\n[3,]    3    7\n[4,]    4    8\n```\n\n\n:::\n\n```{.r .cell-code}\nE$newa <- 10:17\n\n## create a dataframe\nscores <- c (30, 45, 50)\nnames <- c(\"Peter\", \"John\", \"Alice\")\nstat245_scores <- data.frame (names, scores)\nstat245_scores\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n  names scores\n1 Peter     30\n2  John     45\n3 Alice     50\n```\n\n\n:::\n\n```{.r .cell-code}\nstat245_scores$names\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"Peter\" \"John\"  \"Alice\"\n```\n\n\n:::\n\n```{.r .cell-code}\nstat245_scores$scores [1] <- 40\nstat245_scores\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n  names scores\n1 Peter     40\n2  John     45\n3 Alice     50\n```\n\n\n:::\n\n```{.r .cell-code}\nstat245_scores$perc <- stat245_scores$scores/50 * 100\nstat245_scores\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n  names scores perc\n1 Peter     40   80\n2  John     45   90\n3 Alice     50  100\n```\n\n\n:::\n\n```{.r .cell-code}\nstat245_scores$adj <- stat245_scores$perc + 10\nstat245_scores\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n  names scores perc adj\n1 Peter     40   80  90\n2  John     45   90 100\n3 Alice     50  100 110\n```\n\n\n:::\n\n```{.r .cell-code}\n###############################################################################\n```\n:::\n\n\n\n\n## Import a dataset into R environment and Simple Operation\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n###############################################################################\n\n## import myagpop.csv into an R data frame called 'myagpop'\nagpop <- read.csv(\"agpop.csv\")\n\n## Now, we can use the data:\n\n## preview agpop\nhead (agpop)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n                 county state acres92 acres87 acres82 farms92 farms87 farms82\n1 ALEUTIAN ISLANDS AREA    AK  683533  726596  764514      26      27      28\n2        ANCHORAGE AREA    AK   47146   59297  256709     217     245     223\n3        FAIRBANKS AREA    AK  141338  154913  204568     168     175     170\n4           JUNEAU AREA    AK     210     214     127       8       8      12\n5  KENAI PENINSULA AREA    AK   50810   85712   98035      93     119     137\n6        AUTAUGA COUNTY    AL  107259  116050  145044     322     388     453\n  largef92 largef87 largef82 smallf92 smallf87 smallf82 region\n1       14       16       20        6        4        1      W\n2        9       10       11       41       52       38      W\n3       25       28       21       12       18       25      W\n4        0        0        0        5        4        8      W\n5        9       18       17       12       18       19      W\n6       25       32       32        8       19       17      S\n```\n\n\n:::\n\n```{.r .cell-code}\n## look at the variable name\ncolnames (agpop) \n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n [1] \"county\"   \"state\"    \"acres92\"  \"acres87\"  \"acres82\"  \"farms92\" \n [7] \"farms87\"  \"farms82\"  \"largef92\" \"largef87\" \"largef82\" \"smallf92\"\n[13] \"smallf87\" \"smallf82\" \"region\"  \n```\n\n\n:::\n\n```{.r .cell-code}\n## find number of cols\nncol (agpop) \n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 15\n```\n\n\n:::\n\n```{.r .cell-code}\n## find number of rows\nnrow (agpop) \n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 3078\n```\n\n\n:::\n\n```{.r .cell-code}\n## access a certain row \nagpop [2, ]\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n          county state acres92 acres87 acres82 farms92 farms87 farms82 largef92\n2 ANCHORAGE AREA    AK   47146   59297  256709     217     245     223        9\n  largef87 largef82 smallf92 smallf87 smallf82 region\n2       10       11       41       52       38      W\n```\n\n\n:::\n\n```{.r .cell-code}\n## access a certain column\nagpop [1:20, \"acres92\"] ## equivalent to \n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n [1] 683533  47146 141338    210  50810 107259 167832 177189  48022 137426\n[11] 144799  96427  73841 109555 121504  99466  67950  61426  68478  47200\n```\n\n\n:::\n\n```{.r .cell-code}\nagpop$acres92[1:20]\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n [1] 683533  47146 141338    210  50810 107259 167832 177189  48022 137426\n[11] 144799  96427  73841 109555 121504  99466  67950  61426  68478  47200\n```\n\n\n:::\n\n```{.r .cell-code}\nagpop$largef92[1:20]\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n [1] 14  9 25  0  9 25 24 40  6  9 29 18  4 22 24  8  9 13  4  5\n```\n\n\n:::\n\n```{.r .cell-code}\n## find mean of acres92\nmean (agpop $acres92)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 306677\n```\n\n\n:::\n\n```{.r .cell-code}\n## find sd of acres92\nsd (agpop $acres92)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 424686.7\n```\n\n\n:::\n\n```{.r .cell-code}\nagpop_AK  <- agpop [agpop$state == \"AK\", ]\n\nagpop_AK <- subset (agpop, state == \"AK\")\n\nagpop_W <- subset (agpop, region == \"W\")\n\nagpop_largefarm <- subset (agpop, largef92 > 10)\n\n\nhist (agpop$acres92)\n```\n\n::: {.cell-output-display}\n![](introR_files/figure-pdf/unnamed-chunk-2-1.pdf){fig-pos='H'}\n:::\n:::\n\n\n\n\nProduce Plots\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#pdf (\"hist_acres92.pdf\") ## use this command and dev.off to save the output to a file\nhist (agpop$acres92)\n```\n\n::: {.cell-output-display}\n![](introR_files/figure-pdf/unnamed-chunk-3-1.pdf){fig-pos='H'}\n:::\n\n```{.r .cell-code}\n#dev.off()\n\n#jpeg (\"agpop_acres_87v92.jpg\")\n\nplot (agpop$acres87, agpop$acres92)\nabline (a = 0, b = 1)\n```\n\n::: {.cell-output-display}\n![](introR_files/figure-pdf/unnamed-chunk-3-2.pdf){fig-pos='H'}\n:::\n\n```{.r .cell-code}\n#dev.off()## this is used to close the jpeg file\n```\n:::\n\n\n\n\n## Create your own function\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n### data is a matrix or data.frame\nmeans_col <- function (data)\n{\n    n <- ncol (data)\n    cmeans <- rep (NA, n)\n    for (j in 1:n)\n    {\n        cmeans[j] <- mean (data[,j])\n        \n    }\n    cmeans\n}\n\n### apply function\nmeans_col (agpop[, 3:13])\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n [1] 306676.97141 313016.37817 320193.69298    625.50357    678.28428\n [6]    728.06238     56.17674     54.86160     52.62248     54.09227\n[11]     59.53769\n```\n\n\n:::\n\n```{.r .cell-code}\n### R built-in function\ncolMeans (agpop[, 3:13])\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n     acres92      acres87      acres82      farms92      farms87      farms82 \n306676.97141 313016.37817 320193.69298    625.50357    678.28428    728.06238 \n    largef92     largef87     largef82     smallf92     smallf87 \n    56.17674     54.86160     52.62248     54.09227     59.53769 \n```\n\n\n:::\n:::\n\n\n\n\n## Include Images Saved in An External File\n\nUsing the following R code to include your images saved in an external file.  \n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nknitr::include_graphics(\"handwriting.png\")\n```\n\n::: {.cell-output-display}\n![](handwriting.png){fig-pos='H' width=2.04in}\n:::\n:::\n\n\n\n\nYou can hide the above R code by setting \"echo=FALSE\" for the r chunk. For example, I will include the image once again as follows:\n\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![This is a figure inserted from the file called \"handwriting.png\"](handwriting.png){#fig-handwriting width=2.04in}\n:::\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {
      "knitr": [
        "{\"type\":\"list\",\"attributes\":{},\"value\":[]}"
      ]
    },
    "preserve": null,
    "postProcess": false
  }
}