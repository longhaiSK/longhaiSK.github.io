{
    "contents" : "## a function that similates a markov chain\nsim_one_mc <- function (ini, iters, n = 10)\n{\n    forward <- function(i) \n    {  if( i == n - 1) 0 \n       else i + 1\n    }\n    backward <- function(i)\n    {  if( i == 0 ) n - 1\n       else i - 1\n    }\n    \n    mc <- rep (0, iters + 1)\n    mc[1] <- ini\n    for (i in 2: (iters+1))\n    {\n        \n        u <- runif(1)\n        if(u < 0.45)  mc[i] <- forward(mc[i-1])\n        else if( u > 0.55 ) mc[i] <- backward(mc[i-1])\n        else mc[i] <- mc[i-1]\n        \n    }\n    mc\n}\n\nplot(one_mc <- sim_one_mc (2,20) , type = \"l\")\n\nabline (h = 0:9, lty = 2)\n## simulate 1000 chain\nmultiple_mc <- replicate (1000, sim_one_mc (2, 20))\nhead (multiple_mc)\nmatplot (multiple_mc[, 1:100], type = \"l\")\nplot (multiple_mc[,1000],type = \"b\") ## look at a chain\nbarplot(table (multiple_mc[20,])) ## look at an iteration\n\n## simulate a long chain\nplot(one_mc <- sim_one_mc (2,2000) , type = \"l\")\n## barplot of state distribution\nbarplot(table (one_mc[-(1:100)]))\n## time correlation\nacf (one_mc)\n\n",
    "created" : 1415218482151.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "1100556245",
    "id" : "1BD46D4",
    "lastKnownWriteTime" : 1415219181,
    "path" : "/Volumes/longhai/public_html/teaching/stat812-1409/rdemo/demo-mcmc-convergence.R",
    "project_path" : "demo-mcmc-convergence.R",
    "properties" : {
    },
    "source_on_save" : false,
    "type" : "r_source"
}