<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html><head><title>R: Bayesian Classification with high order interactions</title>
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
<link rel="stylesheet" type="text/css" href="../../R.css">
</head><body>

<table width="100%" summary="page for comp_train_pred_interact {ClassHighOrderInteract}"><tr><td>comp_train_pred_interact {ClassHighOrderInteract}</td><td align="right">R Documentation</td></tr></table>
<h2>Bayesian Classification with high order interactions</h2>


<h3>Description</h3>

<p>
This function predicts the response with some inputs by learning from training data. We take the high-order interactions into account.
We use a compression technique to reduce the number  of parameters associated
with high-order interactions. The model is trained  with a sort of Markov
chain sampling method, called slice sampling, which is  developed by Professor
Radford Neal in University of Toronto. 
</p>
<p>
The compression information and Markov chain iterations are  stored in binary
log files (Note that they can not be seen with human eyes). The information
can be displayed with function  `display_compress_interact' or `read_mc_g'. 
</p>
<p>
This function is a compact function, and can be used to compress parameters,
or train the model with Markov chain, or predict for test cases, or
combinations them, by setting other relevant parameters to be 0.
</p>


<h3>Usage</h3>

<pre>
comp_train_pred_interact (
        #Specify data information
        test_x,train_x,train_y,no_cls=c(),nos_fth=c(),
        #Specify compression information        
        order,ptn_file="ptn.log",new_compression=1,do_comp=1,  
        #Specify prior information     
        alpha=1,sigma_precisions=c(),sigma_means=c(),
        #Specify slice sampling information
        mc_file="mc.log",start_over=FALSE,iters_mc=200,iters_bt=10,
        iters_sgm=10,w_bt=50,w_sgm=50,m_bt=50,m_sgm=50,ini_sigmas=c(),
        #Specify prediction 
        pred_file=c(),iter_b = 100,forward = 1,iters_pred = 200)
</pre>


<h3>Arguments</h3>

<table summary="R argblock">
<tr valign="top"><td><code>test_x</code></td>
<td>
Categorical inputs (also called features,covariates,independent
variables,explanary variables,predictors) of test data on which your  prediction
is based.  The row is subject and the column is input. Must be coded with 1,2,...
(0 is reserved for other  use). </td></tr>
<tr valign="top"><td><code>train_x</code></td>
<td>
Categorical inputs of training data of the same 
format as `test_x'.</td></tr>
<tr valign="top"><td><code>train_y</code></td>
<td>
Response of training data, a vector of length equal to the row 
of `train_x'. Must be coded with 1,2,... `no_cls' .</td></tr>
<tr valign="top"><td><code>no_cls</code></td>
<td>
a number indicating the number of possibilities (classes) of
response, by default the maximum value in `train_y'.</td></tr>
<tr valign="top"><td><code>nos_fth</code></td>
<td>
a vector indicating the number of possibilites (classes) of 
each feature, by default the maximum value of each feature.</td></tr>
<tr valign="top"><td><code>order</code></td>
<td>
the order of interactions one want to consider, by default the 
total number of features, i.e. ncol(train_x).</td></tr>
<tr valign="top"><td><code>ptn_file</code></td>
<td>
a character sequence specifying the name of the file to which 
the compression result is sent. The information of the
resulting file can be read using function
`display_compress_interact'.</td></tr>
<tr valign="top"><td><code>new_compression</code></td>
<td>
`new_compression=TRUE' indicates doing the compression
again.</td></tr>
<tr valign="top"><td><code>do_comp</code></td>
<td>
`do_comp=1' indicates doing compression, otherwise using 
original parameterization. This is used only to test program.
</td></tr>
<tr valign="top"><td><code>alpha</code></td>
<td>
`alpha=1' means that Cauchy prior is used, `alpha=2' means 
that Gaussian prior is used.</td></tr>
<tr valign="top"><td><code>sigmas_precisions</code></td>
<td>
A vector of precision parameters of the 
Inverse-Chisquare prior for `sigmas', starting with
order 0 (intercept),  having length of `order'+1.By
default, 1e20 for intercept and 1.5 for others.</td></tr>
<tr valign="top"><td><code>sigmas_means</code></td>
<td>
A vector of mean parameters of the  Inverse-Chisquare prior
for `sigmas', of the same  format as `sigmas_precisions'. By default, if
`Cauchy' prior is used,  0.5 for intercept and 0.005/order for others,  if
`Gaussian' prior is used, 100 for intercept, 0.05/order for
others</td></tr>
<tr valign="top"><td><code>mc_file</code></td>
<td>
A character sequence specifying the name of the file to which
Markov chain is sent</td></tr>
<tr valign="top"><td><code>start_over</code></td>
<td>
`start_over=TRUE' means that the old Markov chain file is
deleted before a Markov chain sampling starts, otherwise the Markov chain will  
continue with the last iteration stored in it.</td></tr>
<tr valign="top"><td><code>iters_mc</code></td>
<td>
Number of iterations of Markov chain that will be run. It could 
be 0, meaning no Markov chain sampling will be run.</td></tr>
<tr valign="top"><td><code>iters_bt</code></td>
<td>
Number of iterations of slice sampling for `betas' for each
iteration of Markov chain sampling</td></tr>
<tr valign="top"><td><code>iters_sgm</code></td>
<td>
Number of iterations of slice sampling for `sigmas' for each
iteration of slice sampling for `betas'</td></tr>
<tr valign="top"><td><code>w_bt</code></td>
<td>
Width parameter for slice sampling for `betas', i.e. the length of
itervals of every stepping out.</td></tr>
<tr valign="top"><td><code>w_sgm</code></td>
<td>
Width parameter for slice sampling for `sigmas'.</td></tr>
<tr valign="top"><td><code>m_bt</code></td>
<td>
Maximum number of stepping out for slice sampling for `betas'.</td></tr>
<tr valign="top"><td><code>m_sgm</code></td>
<td>
Maximum number of stepping out for slice sampling for `sigmas'.</td></tr>
<tr valign="top"><td><code>ini_sigmas</code></td>
<td>
Initial values for `sigmas', by default `sigmas_means'.</td></tr>
<tr valign="top"><td><code>pred_file</code></td>
<td>
A character sequence specifying the file to which the
prediction result is sent. If `pred_file=c()', the prediction result is printed 
out on screen (sent to standard output).</td></tr>
<tr valign="top"><td><code>iter_b</code></td>
<td>
The first iteration of Markov chain used to make prediction.</td></tr>
<tr valign="top"><td><code>forward</code></td>
<td>
1 of `forward' Markov chain starting from `iter_b' is used to 
make prediction.</td></tr>
<tr valign="top"><td><code>iters_pred</code></td>
<td>
The number of iterations of Markov chain used to 
make prediction.</td></tr>
</table>

<h3>Value</h3>

<table summary="R argblock">
<tr valign="top"><td><code>times</code></td>
<td>
The time in second for, as this order, compressing parameters,
training the model with compressed parameters, predicting on test cases</td></tr>
<tr valign="top"><td><code>pred_result</code></td>
<td>
a data frame with first 'no_cls' columns being the predictive
probability and the next column being the predicted response value is returned.</td></tr>
<tr valign="top"><td><code>files</code></td>
<td>
Three character sequences: the 1st is the file storing compression
information, the 2nd is the file storing Markov chain, and the 3rd one is the
file containing the detailed prediction result, i.e., pred_result</td></tr>
</table>

<h3>Author(s)</h3>

<p>
Longhai Li, Department of Statistics, University of Toronto,
<a href="mailto:longhai@stat.utoronto.ca">longhai@stat.utoronto.ca</a>,
<a href="http://www.utstat.toronto.edu/longhai">http://www.utstat.toronto.edu/longhai</a>
</p>


<h3>See Also</h3>

<p>
display_compress_interact, read_mc_g, gendata_interact,evaluate_prediction
</p>


<h3>Examples</h3>

<pre>
#save the following R script and run it after modifying for your problem
#library the pre-complied R package, `lib.loc' specify where 
#the library tree is built
#    library("SeqPredHighOrderInteract",lib.loc="~/rlib")

#generate data with a built-in scheme
d1.tr &lt;- gendata_3D(50,3,3,2,0,0.9)
d1.ts &lt;- gendata_3D(100,3,3,2,0,0.9)

#compress parameters, training model, making prediction
mc_file="mc.log"
ptn_file="ptn.log"
pred_file="pred.csv"
order=3
alpha=1

comp_train_pred_interact(
################## specify data information  ###############
test_x=d1.ts$X,train_x=d1.tr$X,train_y=d1.tr$y,
no_cls=2,nos_fth=rep(2,3),
################## specify for compression #################
order=order,ptn_file=ptn_file,new_compression=1,do_comp=1,
###################### specify for priors  #################
alpha=alpha,sigma_precisions=c(),sigma_means=c(),
################# specify for mc sampling ##################
mc_file=mc_file,start_over=TRUE,iters_mc=200,
iters_bt=5,iters_sgm=10,w_bt=50,w_sgm=50,
m_bt=50,m_sgm=50,ini_sigmas=c(),
################## specify for prediction ##################
pred_file=pred_file,iter_b = 100,forward = 2,iters_pred = 50)

</pre>



<hr><div align="center">[Package <em>ClassHighOrderInteract</em> version 1.0 <a href="00Index.html">Index]</a></div>

</body></html>
